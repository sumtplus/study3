package xyz.sumtplus.controller;

import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;
import xyz.sumtplus.domain.MemberVO;
import xyz.sumtplus.service.MemberService;

/**
 * 멤버컨트롤러
 *
 * @author 류슬희
 * @date   2021. 5. 19.
 */

@Controller
@Log4j
@RequestMapping("/member/*")
@AllArgsConstructor
public class MemberController {
	
	private MemberService service;

	@GetMapping("accessError")
	public void accessDenied(Authentication auth, Model model){
		log.info("accessDenied............");
		model.addAttribute("msg","Access Denied (접근거부)");
	}

	
	@GetMapping("terms")
	public void getTerms(){
		log.info("약관동의 페이지");
	}
	
	@GetMapping("login")
	public void loginInput(String error, String logout, Model model){
		log.info("error :: " + error);
		log.info("logout :: " + logout);
		
		if(error != null){
			model.addAttribute("error","Login Error Check Your Account");
		}
	
	if(error != null){
		model.addAttribute("logout","logout!!!!!!!!!!!");
		}
	}
	
	
	
	
	@GetMapping("/logout")
	public void logoutGet(HttpServletRequest req){
		log.info("custom logout");
		log.warn(req.getHeader("referer"));
	}
	
	@PostMapping("/logout")
	public void logoutPost(HttpServletRequest req){
		log.info("post custom logout");
		log.info(req.getHeader("referer"));
	}
	
	@GetMapping("join")
	public void join() {
		
	}

	@PostMapping("join")
	public String join(MemberVO memberVO, RedirectAttributes rttr) {
		log.info("================================");
		log.info("register: " + memberVO);
		service.join(memberVO);
		rttr.addFlashAttribute("result", memberVO.getUserId());
		return "redirect:/member/login";
	}
	
	@RequestMapping("/idcheck")
	@ResponseBody
	public Map<Object, Object> idcheck(@RequestBody MemberVO memberVO) {
		log.info(memberVO); 
		int count = 0;
		Map<Object, Object> map = new HashMap<Object, Object>();
		 
		count = service.idChk(memberVO);
		map.put("cnt", count);
		 
		return map;
	}
}
